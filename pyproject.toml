[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "badas"
version = "1.0.0"
description = "State-of-the-art collision prediction for ego-centric threat detection"
readme = "README.md"
authors = [
    {name = "Nexar AI Research", email = "research@nexar.com"}
]
license = {text = "Apache-2.0"}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "Topic :: System :: Monitoring",
    "Operating System :: OS Independent",
]
requires-python = ">=3.8"
dependencies = [
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "transformers>=4.40.0",
    "huggingface_hub>=0.20.0",
    "opencv-python>=4.8.0",
    "numpy>=1.24.0",
    "Pillow>=10.0.0",
    "tqdm>=4.65.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "sphinx>=4.5.0",
    "sphinx-rtd-theme>=1.0.0",
    "pre-commit>=2.20.0",
]
notebooks = [
    "jupyter>=1.0.0",
    "ipywidgets>=8.0.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.12.0",
]
video = [
    "moviepy>=1.0.3",
    "imageio>=2.25.0",
    "imageio-ffmpeg>=0.4.8",
]

[project.urls]
Homepage = "https://github.com/nexar-ai/badas-open"
Documentation = "https://nexar-ai.github.io/badas-open"
Repository = "https://github.com/nexar-ai/badas-open.git"
Issues = "https://github.com/nexar-ai/badas-open/issues"
"Model Hub" = "https://huggingface.co/nexar-ai/badas-open"
Paper = "https://arxiv.org/abs/2025.xxxxx"

[project.scripts]
badas = "badas.cli:main"
badas-predict = "badas.cli:predict_video"

[tool.setuptools.packages.find]
include = ["badas*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
badas = ["config.json", "assets/*"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_any_unimported = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
check_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["badas"]
omit = ["*/tests/*", "*/examples/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]